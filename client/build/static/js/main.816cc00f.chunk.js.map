{"version":3,"sources":["components/Nav/index.js","components/Jumbotron/index.js","components/Grid/index.js","components/Input/index.js","components/Thumbnail/index.js","components/Button/index.js","components/BookList/index.js","utils/API.js","pages/Search.js","pages/NoMatch.js","components/SavedList/index.js","pages/Saved.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","Jumbotron","children","style","height","clear","paddingTop","textAlign","Container","fluid","Row","Col","size","split","map","join","Input","props","marginBottom","type","Button","click","value","onClick","BookList","BookListItem","Thumbnail","src","image","title","authors","description","rel","target","link","id","apiKey","process","API_KEY","input","axios","get","bookData","post","delete","SearchPage","useState","books","setBooks","bookSearch","setBookSearch","handleSave","key","console","log","bookToSave","filter","book","etag","theBook","volumeInfo","imageLinks","thumbnail","searchInfo","textSnippet","infoLink","API","then","res","catch","err","name","onChange","event","placeholder","preventDefault","data","items","NoMatch","SavedPage","useEffect","getBooksDB","_id","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.816cc00f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        Google Books\r\n      </a>\r\n      <a className=\"navbar-item\" href=\"/\">\r\n        Search\r\n      </a>\r\n      <a className=\"navbar-item\" href=\"/saved\">\r\n        Saved\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n      className=\"jumbotron\"\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\n\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nfunction Input(props) {\r\n  return (\r\n    <div className=\"input-group input-group-lg\" style={{ marginBottom: 15 }}>\r\n      <input className=\"form-control\" type=\"text\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;","import React from \"react\";\r\n\r\nfunction Button({ type = \"default\", className, children, click, value }) {\r\n  return (\r\n    <button\r\n      onClick={click}\r\n      className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}\r\n      value={value}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\nexport default Button;","import React from \"react\";\r\n\r\nfunction Button({ type = \"default\", className, children, click, value }) {\r\n  return (\r\n    <button\r\n      onClick={click}\r\n      className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}\r\n      value={value}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport Thumbnail from \"../Thumbnail\";\r\nimport { Container, Row, Col } from \"../Grid\";\r\nimport Button from \"../Button\"\r\n\r\nexport function BookList({ children }) {\r\n  return <ul className=\"list-group\">{children}</ul>;\r\n}\r\nexport function BookListItem(props) {\r\n  return (\r\n    <li className=\"list-group-item\" style={{ marginBottom: 15 }}>\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"xs-2 sm-2\">\r\n            <Thumbnail src={props.image || \"https://placehold.it/200x300\"} />\r\n          </Col>\r\n\r\n          <Col size=\"xs-8 sm-9\">\r\n            <h3>{props.title}</h3>\r\n            <p><strong>By: </strong>{props.authors}</p>\r\n            <p>\r\n              {props.description || \"There is no description of this book.\"}\r\n            </p>\r\n            <a\r\n              rel=\"noreferrer noopener\"\r\n              target=\"_blank\"\r\n              href={props.link}\r\n            >\r\n              Learn more about the book\r\n            </a>\r\n          </Col>\r\n\r\n          <Col size=\"xs-2 sm-1\">\r\n            <Button\r\n              className={\"btn btn-primary\"}\r\n              click={props.click(props.id)}\r\n              value={props.id}\r\n\r\n            >\r\n              Save\r\n              </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </li>\r\n  );\r\n}","import axios from \"axios\";\r\n\r\nconst query = \"https://www.googleapis.com/books/v1/volumes?q=\"\r\nconst apiKey = process.env.API_KEY\r\n\r\nexport default {\r\n\r\n  searchBooks: function (input) {\r\n    return axios.get(query + input.split(\" \").join(\"+\") + apiKey)\r\n  },\r\n  getBooks: function () {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  saveBook: function (bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  },\r\n  deleteBook: function (id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  }\r\n};","import React, { useState } from \"react\";\r\n\r\n// COMPONENTS\r\nimport Nav from '../components/Nav'\r\nimport Jumbotron from \"../components/Jumbotron\"\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Input from \"../components/Input\"\r\nimport { BookList, BookListItem } from \"../components/BookList\"\r\nimport Button from \"../components/Button\"\r\nimport API from \"../utils/API\";\r\n\r\nexport default function SearchPage() {\r\n\r\n    const [books, setBooks] = useState([])\r\n    const [bookSearch, setBookSearch] = useState(\"\")\r\n\r\n    const handleInputChange = event => {\r\n        const { value } = event.target\r\n        setBookSearch(value)\r\n    }\r\n\r\n    const handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        API.searchBooks(bookSearch)\r\n            .then(res => {\r\n\r\n                console.log(res.data)\r\n                setBooks(res.data.items)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleSave = key => {\r\n        console.log(\"save clicked\")\r\n\r\n        const bookToSave = books.filter(book => book.etag === key.target.value);\r\n\r\n\r\n        const theBook = {\r\n            title: bookToSave[0].volumeInfo.title,\r\n            authors: bookToSave[0].volumeInfo.authors,\r\n            image: bookToSave[0].volumeInfo.imageLinks.thumbnail,\r\n            description: bookToSave[0].searchInfo.textSnippet,\r\n            link: bookToSave[0].volumeInfo.infoLink\r\n\r\n        }\r\n\r\n        console.log(theBook)\r\n\r\n\r\n        API.saveBook(theBook)\r\n            .then(res => {\r\n                console.log(res)\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <Jumbotron>\r\n                <h1>React Google Books Search</h1>\r\n                <h2>Search for and Save Books of Interest</h2>\r\n            </Jumbotron>\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <form>\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col size=\"xs-9 sm-10\">\r\n                                        <Input name=\"bookSearch\"\r\n                                            value={bookSearch}\r\n                                            onChange={handleInputChange}\r\n                                            placeholder=\"Search for a Book\"\r\n                                        />\r\n                                    </Col>\r\n                                    <Col size=\"xs-3 sm-2\">\r\n                                        <Button\r\n                                            click={handleFormSubmit}\r\n                                            type=\"success\"\r\n                                            className=\"input-lg\"\r\n                                        >\r\n                                            Search\r\n                    </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"xs-12\">\r\n\r\n                        {!books ? (\r\n                            <h1 className=\"mt-4\">No Results</h1>\r\n                        ) :\r\n                            !bookSearch\r\n                                ? (\r\n                                    <h1 className=\"mt-4\">Perform a search to see results</h1>\r\n                                ) : (\r\n                                    <BookList>\r\n                                        {books.map(book => (\r\n                                            <BookListItem\r\n                                                key={book.etag}\r\n                                                id={book.etag}\r\n                                                title={book.volumeInfo.title}\r\n                                                authors={book.volumeInfo.authors}\r\n                                                image={!book.volumeInfo?.imageLinks?.thumbnail ? (\r\n                                                    \"https://placehold.it/200x300\"\r\n                                                ) : (\r\n                                                        book.volumeInfo.imageLinks.thumbnail\r\n                                                    )}\r\n                                                description={!book.searchInfo?.textSnippet ? (\r\n                                                    \"No description of this book\"\r\n                                                ) : (\r\n                                                        book.searchInfo.textSnippet\r\n                                                    )}\r\n\r\n                                                link={book.volumeInfo.infoLink}\r\n                                                click={() => handleSave}\r\n                                            />\r\n                                        ))}\r\n                                    </BookList>\r\n                                )\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1>404 Page Not Found</h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\nimport Thumbnail from \"../Thumbnail\";\r\nimport { Container, Row, Col } from \"../Grid\";\r\nimport Button from \"../Button\"\r\n\r\nexport function BookList({ children }) {\r\n  return <ul className=\"list-group\">{children}</ul>;\r\n}\r\n\r\nexport function BookListItem(props) {\r\n  return (\r\n    <li className=\"list-group-item\" style={{ marginBottom: 15 }}>\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"xs-2 sm-2\">\r\n            <Thumbnail src={props.image} />\r\n          </Col>\r\n\r\n\r\n          <Col size=\"xs-8 sm-9\">\r\n            <h3>{props.title}</h3>\r\n            <p><strong>By: </strong>{props.authors}</p>\r\n            <p>\r\n              {props.description}\r\n            </p>\r\n            <a\r\n              rel=\"noreferrer noopener\"\r\n              target=\"_blank\"\r\n              href={props.link}\r\n            >\r\n              Learn more about the book\r\n            </a>\r\n          </Col>\r\n\r\n          <Col size=\"xs-2 sm-1\">\r\n            <Button\r\n              className={\"btn btn-primary\"}\r\n              click={props.click}\r\n              value={props.id}\r\n\r\n            >              Delete\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </li>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\n// COMPONENTS\r\nimport Nav from '../components/Nav'\r\nimport Jumbotron from \"../components/Jumbotron\"\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { BookList, BookListItem } from \"../components/SavedList\"\r\nimport API from \"../utils/API\";\r\n\r\nexport default function SavedPage() {\r\n\r\n  const [books, setBooks] = useState([])\r\n\r\n  useEffect(() => {\r\n    getBooksDB()\r\n  }, [])\r\n\r\n\r\n  const getBooksDB = () => {\r\n    API.getBooks()\r\n      .then(res => {\r\n        setBooks(res.data)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  const deleteBook = (id) => {\r\n    console.log(\"delete book\")\r\n    API.deleteBook(id)\r\n      .then(res => getBooksDB())\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <Jumbotron>\r\n        <h1>React Google Books Search</h1>\r\n        <h2>Search for and Save Books of Interest</h2>\r\n      </Jumbotron>\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"xs-12\">\r\n            <BookList>\r\n              {books.map(book => (\r\n                < BookListItem\r\n                  key={book._id}\r\n                  id={book._id}\r\n                  title={book.title}\r\n                  authors={book.authors}\r\n                  image={book.image}\r\n                  description={book.description}\r\n                  link={book.link}\r\n                  click={() => deleteBook(book._id)}\r\n                />\r\n              ))}\r\n            </BookList>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// PAGES\r\nimport SearchPage from \"./pages/Search\"\r\nimport NoMatch from \"./pages/NoMatch\"\r\nimport SavedPage from \"./pages/Saved\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path={[\"/\", \"/books\"]}>\r\n            <SearchPage />\r\n          </Route>\r\n          <Route exact path=\"/saved\">\r\n            <SavedPage />\r\n          </Route>\r\n\r\n          <Route>\r\n            <NoMatch />\r\n          </Route>\r\n\r\n        </Switch>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}